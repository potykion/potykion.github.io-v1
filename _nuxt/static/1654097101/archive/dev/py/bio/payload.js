__NUXT_JSONP__("/archive/dev/py/bio", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){return {data:[{page:{slug:"bio",description:"Чем я занимался как backend разработчик",title:"Бекенд-биография",big:true,toc:[{id:e,depth:f,text:g},{id:h,depth:f,text:i}],body:{type:"root",children:[{type:b,tag:j,props:{id:e},children:[{type:b,tag:k,props:{ariaHidden:l,href:"#google-datastore--bigquery",tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:g}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Начинал с конструктора зон доставки. В рамках задачи нужно было написать фронтенд - конструктор зон доставки + на\nсервере нужно было эти полигоны хранить и написать бизнес логику на вхождение адреса в зоне доставки."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Тогда сервер был на Google App Engine: webapp2 + Google Datastore. Гаешка приятна тем, что деплой в одну команду +\nавтоматическое масштабирование - не нужно заниматься девопсом. Датастор тоже приятен: nosql с автоматическим маппингом в\nPython-классы."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Но Datastore не очень подходит для аналитики: нет SQL + много памяти жрет, тк грузятся все данные. По этой причине\nрешили сделать синхронизацию Datastore-данных в BigQuery. Я написал пару крон-джобов, которые брали данные из Датастора\nи переводили в BigQuery-json."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Потом перевели отчеты на BigQuery, отчеты стали грузиться быстрее + в последствии на основе данных из BigQuery сделать\nцелую аналитическую систему (RFM-анализ, когортный анализ и тд)."}]},{type:a,value:c},{type:b,tag:j,props:{id:h},children:[{type:b,tag:k,props:{ariaHidden:l,href:"#%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0-%D1%8D%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%BE%D0%BD%D0%BD%D0%BE%D0%B3%D0%BE-%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%BE%D0%BE%D0%B1%D0%BE%D1%80%D0%BE%D1%82%D0%B0-%D0%BF%D0%B5%D1%80%D0%B2%D0%B0%D1%8F-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F",tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:i}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Компания тогда работала с несколькими десятками ресторанов, а в некоторых ресторанах было несколько юрлиц. И счета на\nоплату этим юрлицам выставлялись вручную: руками грузились цифры за месяц, руками считалось вознаграждение и руками\nгенерировался пакет документов."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Это занимало довольно много времени, и нужно было автоматизировать это. Для этого начали писать систему электронного\nдокументооборота. В рамках этой системы я написал формирование сводки по заказам, расчет вознаграждение для юрлиц и\nрендеринг документов. Стек технологий: Google App Engine + requests + openpyxl."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"(надо дописать...)"}]}]},dir:"\u002Farchive\u002Fdev\u002Fpy",path:"\u002Farchive\u002Fdev\u002Fpy\u002Fbio",extension:".md",createdAt:q,updatedAt:q}}],fetch:{},mutations:[]}}("text","element","\n","p","google-datastore--bigquery",2,"Google Datastore \u003E BigQuery","sistema-elektronnogo-dokumentooborota-pervaya-versiya","Система электронного документооборота (первая версия)","h2","a","true",-1,"span","icon","icon-link","2022-06-01T15:22:47.338Z")));